{"ast":null,"code":"var _jsxFileName = \"/home/arpit/Documents/React/codes/src/components/Persons/Person/Person.js\";\nimport React, { Component } from \"react\";\nimport classes from \"./Person.module.css\";\nimport Aux from \"./../../../hoc/Aux\";\nimport withClass from \"./../../../hoc/withClass\";\n\nclass Person extends Component {\n  componentDidMount() {// this.inputElement.focus();\n  }\n\n  render() {\n    console.log(\"render Person\");\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      onClick: this.props.click,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"I am \", this.props.name, \" and I am \", this.props.age), React.createElement(\"input\", {\n      className: \"centeredText\",\n      type: \"text\",\n      value: this.props.name,\n      onChange: this.props.changed,\n      ref: inputEl => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default withClass(Person, classes.Person);\n/*Above we have used two way binding i.e we have provided value as well as we are also changing the value*/\n\n/*this section was used to know what is the flow in which react calls the lefeCycle methods \nstatic getDerivedStateFromProps(props, state){\n        console.log(\"getDerivedStateFromProps Person\");\n        return null;\n    };\n\n    shouldComponentUpdate(nextProps, nextState){\n        console.log(\"shouldComponentUpdate person\");\n        return true;\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState){\n        console.log(\"getSnapshotBeforeUpdate Person\");\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        console.log(\"componentDidUpdate Person\");\n    }*/","map":{"version":3,"sources":["/home/arpit/Documents/React/codes/src/components/Persons/Person/Person.js"],"names":["React","Component","classes","Aux","withClass","Person","componentDidMount","render","console","log","props","click","name","age","changed","inputEl"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;;AAEA,MAAMC,MAAN,SAAsBJ,SAAtB,CAA+B;AAE3BK,EAAAA,iBAAiB,GAAE,CAChB;AACF;;AACDC,EAAAA,MAAM,GAAE;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,WACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,OAAO,EAAI,KAAKC,KAAL,CAAWC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAuC,KAAKD,KAAL,CAAWE,IAAlD,gBAAkE,KAAKF,KAAL,CAAWG,GAA7E,CADJ,EAEI;AAAO,MAAA,SAAS,EAAG,cAAnB;AACA,MAAA,IAAI,EAAG,MADP;AAEA,MAAA,KAAK,EACD,KAAKH,KAAL,CAAWE,IAHf;AAKA,MAAA,QAAQ,EACJ,KAAKF,KAAL,CAAWI,OANf;AAQA,MAAA,GAAG,EAAKC,OAAD,IAAa,CAEnB,CAVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAiBH;;AAxB0B;;AA0B9B;AAED,eAAeX,SAAS,CAACC,MAAD,EAASH,OAAO,CAACG,MAAjB,CAAxB;AAEA;;AACA","sourcesContent":["import React, {Component} from \"react\";\nimport classes from \"./Person.module.css\";\nimport Aux from \"./../../../hoc/Aux\";\nimport withClass from \"./../../../hoc/withClass\";\n\nclass Person extends  Component{\n    \n    componentDidMount(){\n       // this.inputElement.focus();\n    }\n    render(){\n        console.log(\"render Person\")\n        return (\n            <Aux>\n                <h1 onClick = {this.props.click}>I am {this.props.name} and I am {this.props.age}</h1>\n                <input className = \"centeredText\"\n                type = \"text\"\n                value = {\n                    this.props.name\n                }\n                onChange = {\n                    this.props.changed\n                }\n                ref = {(inputEl) => {\n                    \n                }} >\n                </input>\n            </Aux>\n        );\n    }\n    \n};\n\nexport default withClass(Person, classes.Person);\n\n/*Above we have used two way binding i.e we have provided value as well as we are also changing the value*/\n/*this section was used to know what is the flow in which react calls the lefeCycle methods \nstatic getDerivedStateFromProps(props, state){\n        console.log(\"getDerivedStateFromProps Person\");\n        return null;\n    };\n\n    shouldComponentUpdate(nextProps, nextState){\n        console.log(\"shouldComponentUpdate person\");\n        return true;\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState){\n        console.log(\"getSnapshotBeforeUpdate Person\");\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        console.log(\"componentDidUpdate Person\");\n    }*/"]},"metadata":{},"sourceType":"module"}