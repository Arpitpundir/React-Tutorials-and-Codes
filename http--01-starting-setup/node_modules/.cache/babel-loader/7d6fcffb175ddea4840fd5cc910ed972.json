{"ast":null,"code":"import _classCallCheck from \"/home/arpit/Documents/React/http--01-starting-setup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/arpit/Documents/React/http--01-starting-setup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/arpit/Documents/React/http--01-starting-setup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/arpit/Documents/React/http--01-starting-setup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/arpit/Documents/React/http--01-starting-setup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/arpit/Documents/React/http--01-starting-setup/src/containers/FullPost/FullPost.js\";\nimport React, { Component } from 'react';\nimport './FullPost.css';\nimport axios from './../../axios';\n\nvar FullPost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FullPost, _Component);\n\n  function FullPost(props) {\n    var _this;\n\n    _classCallCheck(this, FullPost);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FullPost).call(this, props));\n    _this.state = {\n      fullPost: null\n    };\n    return _this;\n  } //componentDidUpdate(prevProps, prevState){\n  //whenever using update lifecycle be attentive that you not start the infinite loop\n  //if(prevProps.postId != this.props.postId){\n\n\n  _createClass(FullPost, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadData();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.loadData();\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      var _this2 = this;\n\n      if (this.match.params.id) {\n        if (!this.state.fullPost || this.state.fullPost != this.props.match.params.id) {\n          axios.get(\"posts/\" + this.props.match.params.id).then(function (res) {\n            _this2.setState({\n              fullPost: res.data\n            });\n          }).catch(function (error) {\n            console.log(error);\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var post = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Please select a Post!\");\n\n      if (this.state.fullPost) {\n        post = React.createElement(\"div\", {\n          className: \"FullPost\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, this.state.fullPost.title), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, this.state.fullPost.body), React.createElement(\"div\", {\n          className: \"Edit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"Delete\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, \"Delete\")));\n      }\n\n      return post;\n    }\n  }]);\n\n  return FullPost;\n}(Component);\n\nexport default FullPost;","map":{"version":3,"sources":["/home/arpit/Documents/React/http--01-starting-setup/src/containers/FullPost/FullPost.js"],"names":["React","Component","axios","FullPost","props","state","fullPost","loadData","match","params","id","get","then","res","setState","data","catch","error","console","log","post","title","body"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,eAAlB;;IAEMC,Q;;;;;AACF,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAC;AADA,KAAb;AAFc;AAKjB,G,CACD;AACI;AACA;;;;;wCACe;AACf,WAAKC,QAAL;AACH;;;yCAEmB;AAChB,WAAKA,QAAL;AACH;;;+BAES;AAAA;;AACN,UAAG,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,EAArB,EAAwB;AACpB,YAAG,CAAC,KAAKL,KAAL,CAAWC,QAAZ,IAAyB,KAAKD,KAAL,CAAWC,QAAX,IAAuB,KAAKF,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBC,EAA3E,EAA+E;AAC3ER,UAAAA,KAAK,CAACS,GAAN,CACI,WACA,KAAKP,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBC,EAF5B,EAGAE,IAHA,CAGK,UAACC,GAAD,EAAS;AACV,YAAA,MAAI,CAACC,QAAL,CAAc;AACVR,cAAAA,QAAQ,EAAEO,GAAG,CAACE;AADJ,aAAd;AAGH,WAPD,EAOGC,KAPH,CAOS,UAACC,KAAD,EAAW;AAChBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,WATD;AAUH;AACJ;AACJ;;;6BAES;AACN,UAAIG,IAAI,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAX;;AACA,UAAG,KAAKf,KAAL,CAAWC,QAAd,EAAuB;AACnBc,QAAAA,IAAI,GACA;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK,KAAKf,KAAL,CAAWC,QAAX,CAAoBe,KAAzB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI,KAAKhB,KAAL,CAAWC,QAAX,CAAoBgB,IAAxB,CAFJ,EAGI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CAHJ,CADJ;AASH;;AACD,aAAOF,IAAP;AACH;;;;EAjDkBnB,S;;AAoDvB,eAAeE,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport './FullPost.css';\nimport axios from './../../axios';\n\nclass FullPost extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            fullPost:null\n        }\n    }\n    //componentDidUpdate(prevProps, prevState){\n        //whenever using update lifecycle be attentive that you not start the infinite loop\n        //if(prevProps.postId != this.props.postId){\n    componentDidMount(){\n        this.loadData()\n    }\n\n    componentDidUpdate(){\n        this.loadData()\n    }\n\n    loadData(){\n        if(this.match.params.id){\n            if(!this.state.fullPost || (this.state.fullPost != this.props.match.params.id)){\n                axios.get(\n                    \"posts/\" +\n                    this.props.match.params.id).\n                then((res) => {\n                    this.setState({\n                        fullPost: res.data\n                    })\n                }).catch((error) => {\n                    console.log(error)\n                })\n            }\n        }\n    }\n\n    render () {\n        let post = <p>Please select a Post!</p>;\n        if(this.state.fullPost){\n            post = (\n                <div className=\"FullPost\">\n                    <h1>{this.state.fullPost.title}</h1>\n                    <p>{this.state.fullPost.body}</p>\n                    <div className=\"Edit\">\n                        <button className=\"Delete\">Delete</button>\n                    </div>\n                </div>\n            );\n        }\n        return post;\n    }\n}\n\nexport default FullPost;"]},"metadata":{},"sourceType":"module"}