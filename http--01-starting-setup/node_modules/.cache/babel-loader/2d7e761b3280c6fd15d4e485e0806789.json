{"ast":null,"code":"var _jsxFileName = \"/home/arpit/Documents/React/http--01-starting-setup/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport axios from \"axios\"; //we can specify the values that are going to remain for all axios requests\n\naxios.defaults.baseURL = \"https://jsonplaceholder.typicode.com/\"; //with request interceptors it is possible to modify the request before they are sent, we can also\n//deal with which happens before request is sent\n\naxios.interceptors.request.use(function (req) {\n  console.log(req);\n  return req;\n}, function (error) {\n  console.log(error);\n  return Promise.reject(error); //Promise.reject returns a rejected Promise object i.e Promise has been rejected i.e the rejected function \n  //would be called\n}); //with res interceptors we it is possible to modify res object before being processed by any callback function\n\naxios.interceptors.response.use(function (res) {\n  console.log(res);\n  return res;\n}, function (error) {\n  console.log(error);\n  return Promise.reject(error);\n});\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}), document.getElementById('root'));\nregisterServiceWorker();","map":{"version":3,"sources":["/home/arpit/Documents/React/http--01-starting-setup/src/index.js"],"names":["React","ReactDOM","App","registerServiceWorker","axios","defaults","baseURL","interceptors","request","use","req","console","log","error","Promise","reject","response","res","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACAA,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAyB,uCAAzB,C,CACA;AACA;;AACAF,KAAK,CAACG,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,UAACC,GAAD,EAAO;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,SAAOA,GAAP;AACD,CAHD,EAGG,UAACG,KAAD,EAAU;AACXF,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP,CAFW,CAGX;AACA;AACD,CARD,E,CAWA;;AACAT,KAAK,CAACG,YAAN,CAAmBS,QAAnB,CAA4BP,GAA5B,CAAgC,UAACQ,GAAD,EAAO;AACrCN,EAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACA,SAAOA,GAAP;AACD,CAHD,EAGG,UAACJ,KAAD,EAAS;AACVF,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAND;AAQAZ,QAAQ,CAACiB,MAAT,CAAiB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAjB,EAA0BC,QAAQ,CAACC,cAAT,CAAyB,MAAzB,CAA1B;AACAjB,qBAAqB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport axios from \"axios\";\n\n//we can specify the values that are going to remain for all axios requests\naxios.defaults.baseURL = \"https://jsonplaceholder.typicode.com/\";\n//with request interceptors it is possible to modify the request before they are sent, we can also\n//deal with which happens before request is sent\naxios.interceptors.request.use((req)=>{\n  console.log(req)\n  return req\n}, (error) =>{\n  console.log(error)\n  return Promise.reject(error)\n  //Promise.reject returns a rejected Promise object i.e Promise has been rejected i.e the rejected function \n  //would be called\n}\n)\n\n//with res interceptors we it is possible to modify res object before being processed by any callback function\naxios.interceptors.response.use((res)=>{\n  console.log(res)\n  return res\n}, (error)=>{\n  console.log(error)\n  return Promise.reject(error)\n})\n\nReactDOM.render( <App />, document.getElementById( 'root' ) );\nregisterServiceWorker();\n"]},"metadata":{},"sourceType":"module"}